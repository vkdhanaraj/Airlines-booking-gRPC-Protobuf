// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: api/booking.proto

package booking

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Booking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatNumber    int32  `protobuf:"varint,1,opt,name=seatNumber,proto3" json:"seatNumber,omitempty"`
	PassengerName string `protobuf:"bytes,2,opt,name=passengerName,proto3" json:"passengerName,omitempty"`
}

func (x *Booking) Reset() {
	*x = Booking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_booking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Booking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Booking) ProtoMessage() {}

func (x *Booking) ProtoReflect() protoreflect.Message {
	mi := &file_api_booking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Booking.ProtoReflect.Descriptor instead.
func (*Booking) Descriptor() ([]byte, []int) {
	return file_api_booking_proto_rawDescGZIP(), []int{0}
}

func (x *Booking) GetSeatNumber() int32 {
	if x != nil {
		return x.SeatNumber
	}
	return 0
}

func (x *Booking) GetPassengerName() string {
	if x != nil {
		return x.PassengerName
	}
	return ""
}

type Passenger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Passenger) Reset() {
	*x = Passenger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_booking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Passenger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Passenger) ProtoMessage() {}

func (x *Passenger) ProtoReflect() protoreflect.Message {
	mi := &file_api_booking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Passenger.ProtoReflect.Descriptor instead.
func (*Passenger) Descriptor() ([]byte, []int) {
	return file_api_booking_proto_rawDescGZIP(), []int{1}
}

func (x *Passenger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Flight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightName string `protobuf:"bytes,1,opt,name=flightName,proto3" json:"flightName,omitempty"`
}

func (x *Flight) Reset() {
	*x = Flight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_booking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flight) ProtoMessage() {}

func (x *Flight) ProtoReflect() protoreflect.Message {
	mi := &file_api_booking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flight.ProtoReflect.Descriptor instead.
func (*Flight) Descriptor() ([]byte, []int) {
	return file_api_booking_proto_rawDescGZIP(), []int{2}
}

func (x *Flight) GetFlightName() string {
	if x != nil {
		return x.FlightName
	}
	return ""
}

type FlightFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AirlineCompany string `protobuf:"bytes,1,opt,name=airlineCompany,proto3" json:"airlineCompany,omitempty"`
}

func (x *FlightFilter) Reset() {
	*x = FlightFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_booking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightFilter) ProtoMessage() {}

func (x *FlightFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_booking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightFilter.ProtoReflect.Descriptor instead.
func (*FlightFilter) Descriptor() ([]byte, []int) {
	return file_api_booking_proto_rawDescGZIP(), []int{3}
}

func (x *FlightFilter) GetAirlineCompany() string {
	if x != nil {
		return x.AirlineCompany
	}
	return ""
}

var File_api_booking_proto protoreflect.FileDescriptor

var file_api_booking_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x4f, 0x0a, 0x07,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x61,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a,
	0x09, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28,
	0x0a, 0x06, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0c, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x69, 0x72, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x32, 0x45, 0x0a, 0x0d, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x34, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x12, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e,
	0x67, 0x65, 0x72, 0x1a, 0x10, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x32, 0x47, 0x0a, 0x0a, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0d, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x15, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x0f, 0x2e,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x22, 0x00,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_booking_proto_rawDescOnce sync.Once
	file_api_booking_proto_rawDescData = file_api_booking_proto_rawDesc
)

func file_api_booking_proto_rawDescGZIP() []byte {
	file_api_booking_proto_rawDescOnce.Do(func() {
		file_api_booking_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_booking_proto_rawDescData)
	})
	return file_api_booking_proto_rawDescData
}

var file_api_booking_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_booking_proto_goTypes = []interface{}{
	(*Booking)(nil),      // 0: booking.Booking
	(*Passenger)(nil),    // 1: booking.Passenger
	(*Flight)(nil),       // 2: booking.Flight
	(*FlightFilter)(nil), // 3: booking.FlightFilter
}
var file_api_booking_proto_depIdxs = []int32{
	1, // 0: booking.TicketService.BookTicket:input_type -> booking.Passenger
	3, // 1: booking.Flightinfo.FlightDetails:input_type -> booking.FlightFilter
	0, // 2: booking.TicketService.BookTicket:output_type -> booking.Booking
	2, // 3: booking.Flightinfo.FlightDetails:output_type -> booking.Flight
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_booking_proto_init() }
func file_api_booking_proto_init() {
	if File_api_booking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_booking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Booking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_booking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Passenger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_booking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_booking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_booking_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_booking_proto_goTypes,
		DependencyIndexes: file_api_booking_proto_depIdxs,
		MessageInfos:      file_api_booking_proto_msgTypes,
	}.Build()
	File_api_booking_proto = out.File
	file_api_booking_proto_rawDesc = nil
	file_api_booking_proto_goTypes = nil
	file_api_booking_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TicketServiceClient is the client API for TicketService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketServiceClient interface {
	BookTicket(ctx context.Context, in *Passenger, opts ...grpc.CallOption) (*Booking, error)
}

type ticketServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTicketServiceClient(cc grpc.ClientConnInterface) TicketServiceClient {
	return &ticketServiceClient{cc}
}

func (c *ticketServiceClient) BookTicket(ctx context.Context, in *Passenger, opts ...grpc.CallOption) (*Booking, error) {
	out := new(Booking)
	err := c.cc.Invoke(ctx, "/booking.TicketService/BookTicket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketServiceServer is the server API for TicketService service.
type TicketServiceServer interface {
	BookTicket(context.Context, *Passenger) (*Booking, error)
}

// UnimplementedTicketServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTicketServiceServer struct {
}

func (*UnimplementedTicketServiceServer) BookTicket(context.Context, *Passenger) (*Booking, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BookTicket not implemented")
}

func RegisterTicketServiceServer(s *grpc.Server, srv TicketServiceServer) {
	s.RegisterService(&_TicketService_serviceDesc, srv)
}

func _TicketService_BookTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Passenger)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).BookTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.TicketService/BookTicket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).BookTicket(ctx, req.(*Passenger))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "booking.TicketService",
	HandlerType: (*TicketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BookTicket",
			Handler:    _TicketService_BookTicket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/booking.proto",
}

// FlightinfoClient is the client API for Flightinfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlightinfoClient interface {
	// rpc FlightDetails(FlightFilter) returns (stream Flight){}
	FlightDetails(ctx context.Context, in *FlightFilter, opts ...grpc.CallOption) (*Flight, error)
}

type flightinfoClient struct {
	cc grpc.ClientConnInterface
}

func NewFlightinfoClient(cc grpc.ClientConnInterface) FlightinfoClient {
	return &flightinfoClient{cc}
}

func (c *flightinfoClient) FlightDetails(ctx context.Context, in *FlightFilter, opts ...grpc.CallOption) (*Flight, error) {
	out := new(Flight)
	err := c.cc.Invoke(ctx, "/booking.Flightinfo/FlightDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FlightinfoServer is the server API for Flightinfo service.
type FlightinfoServer interface {
	// rpc FlightDetails(FlightFilter) returns (stream Flight){}
	FlightDetails(context.Context, *FlightFilter) (*Flight, error)
}

// UnimplementedFlightinfoServer can be embedded to have forward compatible implementations.
type UnimplementedFlightinfoServer struct {
}

func (*UnimplementedFlightinfoServer) FlightDetails(context.Context, *FlightFilter) (*Flight, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FlightDetails not implemented")
}

func RegisterFlightinfoServer(s *grpc.Server, srv FlightinfoServer) {
	s.RegisterService(&_Flightinfo_serviceDesc, srv)
}

func _Flightinfo_FlightDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlightFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlightinfoServer).FlightDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/booking.Flightinfo/FlightDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlightinfoServer).FlightDetails(ctx, req.(*FlightFilter))
	}
	return interceptor(ctx, in, info, handler)
}

var _Flightinfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "booking.Flightinfo",
	HandlerType: (*FlightinfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FlightDetails",
			Handler:    _Flightinfo_FlightDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/booking.proto",
}
