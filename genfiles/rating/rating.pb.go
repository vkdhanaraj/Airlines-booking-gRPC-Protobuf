// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: rating.proto

package rating

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightId string `protobuf:"bytes,1,opt,name=flightId,proto3" json:"flightId,omitempty"`
	Rating   int32  `protobuf:"varint,2,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *RatingRequest) Reset() {
	*x = RatingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingRequest) ProtoMessage() {}

func (x *RatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingRequest.ProtoReflect.Descriptor instead.
func (*RatingRequest) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{0}
}

func (x *RatingRequest) GetFlightId() string {
	if x != nil {
		return x.FlightId
	}
	return ""
}

func (x *RatingRequest) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type RatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightId  string  `protobuf:"bytes,1,opt,name=flightId,proto3" json:"flightId,omitempty"`
	Count     int32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	AvgRating float64 `protobuf:"fixed64,3,opt,name=avg_rating,json=avgRating,proto3" json:"avg_rating,omitempty"`
}

func (x *RatingResponse) Reset() {
	*x = RatingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rating_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingResponse) ProtoMessage() {}

func (x *RatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rating_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingResponse.ProtoReflect.Descriptor instead.
func (*RatingResponse) Descriptor() ([]byte, []int) {
	return file_rating_proto_rawDescGZIP(), []int{1}
}

func (x *RatingResponse) GetFlightId() string {
	if x != nil {
		return x.FlightId
	}
	return ""
}

func (x *RatingResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RatingResponse) GetAvgRating() float64 {
	if x != nil {
		return x.AvgRating
	}
	return 0
}

var File_rating_proto protoreflect.FileDescriptor

var file_rating_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x43, 0x0a, 0x0d, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x61, 0x0a, 0x0e, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x76, 0x67, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x32, 0x53,
	0x0a, 0x0d, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x42, 0x0a, 0x0b, 0x52, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x15,
	0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x41, 0x69, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x2d,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x67, 0x52, 0x50, 0x43, 0x2d, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rating_proto_rawDescOnce sync.Once
	file_rating_proto_rawDescData = file_rating_proto_rawDesc
)

func file_rating_proto_rawDescGZIP() []byte {
	file_rating_proto_rawDescOnce.Do(func() {
		file_rating_proto_rawDescData = protoimpl.X.CompressGZIP(file_rating_proto_rawDescData)
	})
	return file_rating_proto_rawDescData
}

var file_rating_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rating_proto_goTypes = []interface{}{
	(*RatingRequest)(nil),  // 0: rating.RatingRequest
	(*RatingResponse)(nil), // 1: rating.RatingResponse
}
var file_rating_proto_depIdxs = []int32{
	0, // 0: rating.RatingService.RateFlights:input_type -> rating.RatingRequest
	1, // 1: rating.RatingService.RateFlights:output_type -> rating.RatingResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rating_proto_init() }
func file_rating_proto_init() {
	if File_rating_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rating_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rating_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RatingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rating_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rating_proto_goTypes,
		DependencyIndexes: file_rating_proto_depIdxs,
		MessageInfos:      file_rating_proto_msgTypes,
	}.Build()
	File_rating_proto = out.File
	file_rating_proto_rawDesc = nil
	file_rating_proto_goTypes = nil
	file_rating_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RatingServiceClient is the client API for RatingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RatingServiceClient interface {
	RateFlights(ctx context.Context, opts ...grpc.CallOption) (RatingService_RateFlightsClient, error)
}

type ratingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRatingServiceClient(cc grpc.ClientConnInterface) RatingServiceClient {
	return &ratingServiceClient{cc}
}

func (c *ratingServiceClient) RateFlights(ctx context.Context, opts ...grpc.CallOption) (RatingService_RateFlightsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RatingService_serviceDesc.Streams[0], "/rating.RatingService/RateFlights", opts...)
	if err != nil {
		return nil, err
	}
	x := &ratingServiceRateFlightsClient{stream}
	return x, nil
}

type RatingService_RateFlightsClient interface {
	Send(*RatingRequest) error
	Recv() (*RatingResponse, error)
	grpc.ClientStream
}

type ratingServiceRateFlightsClient struct {
	grpc.ClientStream
}

func (x *ratingServiceRateFlightsClient) Send(m *RatingRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *ratingServiceRateFlightsClient) Recv() (*RatingResponse, error) {
	m := new(RatingResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RatingServiceServer is the server API for RatingService service.
type RatingServiceServer interface {
	RateFlights(RatingService_RateFlightsServer) error
}

// UnimplementedRatingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRatingServiceServer struct {
}

func (*UnimplementedRatingServiceServer) RateFlights(RatingService_RateFlightsServer) error {
	return status.Errorf(codes.Unimplemented, "method RateFlights not implemented")
}

func RegisterRatingServiceServer(s *grpc.Server, srv RatingServiceServer) {
	s.RegisterService(&_RatingService_serviceDesc, srv)
}

func _RatingService_RateFlights_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RatingServiceServer).RateFlights(&ratingServiceRateFlightsServer{stream})
}

type RatingService_RateFlightsServer interface {
	Send(*RatingResponse) error
	Recv() (*RatingRequest, error)
	grpc.ServerStream
}

type ratingServiceRateFlightsServer struct {
	grpc.ServerStream
}

func (x *ratingServiceRateFlightsServer) Send(m *RatingResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *ratingServiceRateFlightsServer) Recv() (*RatingRequest, error) {
	m := new(RatingRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RatingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rating.RatingService",
	HandlerType: (*RatingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RateFlights",
			Handler:       _RatingService_RateFlights_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "rating.proto",
}
